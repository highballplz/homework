/* 컨테이너 스타일링 */
.login-email, .login-pwd{
  color: var(--grayscale-white);
  font-family: SpoqaHanSans;
  font-size: var(--font-lg);
  font-style: normal;
  font-weight: 400;
  line-height: normal;
  letter-spacing: -0.36px;

  position: relative;
}

.login-email{
  margin-bottom: 31px;
}

.login-pwd{
  margin-bottom: 14px;
}

/* ------------------------------------------------------------------- */

/* input 스타일링 */
.login-email input, .login-pwd input{
  background-color: transparent;
  border: 0;
  
  width: 540px;
  border-bottom: 1px solid var(--grayscale-white);

  padding: 20px 0 15px 8px;
  
  /* .login-email, .login-pwd에서 이미 부여한 속성들이지만 input은 상속을 거절하는 듯.. */
  color: var(--grayscale-white);
  font-family: SpoqaHanSans;
  font-size: var(--font-lg);
  font-style: normal;
  font-weight: 400;
  line-height: normal;
  letter-spacing: -0.36px;
}

/* input이 focus 되었을 때 outline 스타일링 */
.login-email input:focus,
.login-pwd input:focus{
  outline: var(--primary-blue-1) solid 4px;
}

/* ------------------------------------------------------------------- */

/* label 스타일링 */
.login-email label, .login-pwd label{
  position: absolute;
  top: 20px;
  left: 8px;
}

/* input이 focus 되었을 때 label 스타일링 */
/* ~는 sibling 뜻함 */
/* 단 여기서 ~ 쓰려면 input이 label보다 먼저 마크업 돼있어야 함에 주의!! */
/* input에 한 글자 이상 차 있을 조건 표현하는 가상클래스 몰라서
 email은 text type + required 주고 password는 minlength 1로 설정한 뒤
 valid 가상클래스 씀 */
.login-email input:focus ~ label,
.login-email input:valid ~ label,
.login-pwd input:focus ~ label,
.login-pwd input:valid ~ label{
  color: var(--grayscale-white);
  font-family: SpoqaHanSans;
  font-size: var(--card-dialob-element);
  font-style: normal;
  font-weight: 400;
  line-height: normal;
  letter-spacing: -0.26px;

  top: 0;
  left: 0;

  transition: 200ms;
}

/* ------------------------------------------------------------------- */

/* invalid-msg 디폴트*/
#email-invalid-msg, #pwd-invalid-msg{
  color: var(--grayscale-white);
  font-family: SpoqaHanSans;
  font-size: var(--card-dialob-element);
  font-style: normal;
  font-weight: 400;
  line-height: normal;
  letter-spacing: -0.26px;

  padding-top: 5px;
  padding-left: 8px;

  display: none;
}

/* invalid-msg 활성화*/
#email-invalid-msg.show,
#pwd-invalid-msg.show{
  display: block;
}

/* ------------------------------------------------------------------- */

/* valid-or-invalid 버튼 기본값*/
#email-valid-or-invalid,
#pwd-valid-or-invalid{
  position: absolute;
  top: 20px;
  /* transform: translateY(-50%);도 되는지 확인하기 */
  right: 8px;

  width: 16px;
  height: 16px;

  background: url('../images/input-valid.svg');
}

/* email-valid-or-invalid 버튼 활성화*/
#email-valid-or-invalid.invalid,
#pwd-valid-or-invalid.invalid{
  background: url('../images/input-invalid.png');
}

/* input에 한 글자 이상 차 있을 조건 표현하는 가상클래스 몰라서
 email은 text type + required 주고 password는 minlength 1로 설정한 뒤
 invalid 가상클래스 씀 */
.login-email input:invalid ~ #email-invalid-msg,
.login-email input:invalid ~ #email-valid-or-invalid,
.login-pwd input:invalid ~ #pwd-invalid-msg,
.login-pwd input:invalid ~ #pwd-valid-or-invalid{
  display: none;
}

/* ------------------------------------------------------------------- */

/* hide-or-show 버튼 디폴트 */
#hide-or-show{
  border: 0;
  padding: 0;

  position: absolute;
  top: 20px;
  right: 8px;

  width: 16px;
  height: 16px;

  background: url('../images/input-password-show.png');
  
  cursor: pointer;
}

/* hide-or-show 버튼 활성화 */
/* .hide 왜 붙여써야 되는지 */
#hide-or-show.hide{
  background: url('../images/input-password-hide.png');
}

/* input에 한 글자 이상 차 있을 조건 표현하는 가상클래스 몰라서
 email은 text type + required 주고 password는 minlength 1로 설정한 뒤
 valid 가상클래스 씀 */
.login-pwd input:valid ~ #hide-or-show{
  right: 32px;
  transition: 200ms;
}

.login-pwd input:invalid ~ #hide-or-show{
  display: none;
}

.login-pwd input:focus ~ #hide-or-show{
  display: block;
}